"use strict";(self.webpackChunklago_doc=self.webpackChunklago_doc||[]).push([[6752],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(n),d=i,g=m["".concat(s,".").concat(d)]||m[d]||p[d]||o;return n?a.createElement(g,r(r({ref:t},c),{},{components:n})):a.createElement(g,r({ref:t},c))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,r[1]=l;for(var u=2;u<o;u++)r[u]=n[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7042:(e,t,n)=>{n.r(t),n.d(t,{Optional:()=>p,Required:()=>c,assets:()=>s,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var a=n(7462),i=(n(7294),n(3905));const o={sidebar_position:6},r="Customers",l={unversionedId:"guide/customers",id:"guide/customers",title:"Customers",description:"Create a customer",source:"@site/docs/guide/06_customers.mdx",sourceDirName:"guide",slug:"/guide/customers",permalink:"/docs/guide/customers",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"guide",previous:{title:"Upgrades & Downgrades",permalink:"/docs/guide/plans/upgrades-downgrades"},next:{title:"Coupons",permalink:"/docs/guide/coupons"}},s={},u=[{value:"Create a customer",id:"create-a-customer",level:2},{value:"Mandatory fields",id:"mandatory-fields",level:3},{value:"Additional fields",id:"additional-fields",level:3},{value:"Example of customer&#39;s information",id:"example-of-customers-information",level:3},{value:"Update a customer",id:"update-a-customer",level:2},{value:"Delete a customer",id:"delete-a-customer",level:2},{value:"Assigning a plan to a customer",id:"assigning-a-plan-to-a-customer",level:2},{value:"Ingesting events for a customer",id:"ingesting-events-for-a-customer",level:2},{value:"Displaying customer current usage",id:"displaying-customer-current-usage",level:2},{value:"Invoicing a customer",id:"invoicing-a-customer",level:2},{value:"Customer Slug",id:"customer-slug",level:2}],c=e=>{let{children:t,color:n}=e;return(0,i.kt)("span",{style:{color:"#DC3309",fontSize:"13px"}},t)},p=e=>{let{children:t,color:n}=e;return(0,i.kt)("span",{style:{color:"#8C95A6",fontSize:"13px"}},t)},m={toc:u,Required:c,Optional:p};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"customers"},"Customers"),(0,i.kt)("h2",{id:"create-a-customer"},"Create a customer"),(0,i.kt)("p",null,"You can create or update a customer both from the API or the user interface. The entire customer's information can be retrieved from the customer detailed view, available on the UI."),(0,i.kt)("h3",{id:"mandatory-fields"},"Mandatory fields"),(0,i.kt)("p",null,"To create a customer, 2 mandatory information are required:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A ",(0,i.kt)("inlineCode",{parentName:"li"},"customer_id")," ",(0,i.kt)(c,{mdxType:"Required"},"(Required)"),": usual good practice is to send the unique id from your backend;"),(0,i.kt)("li",{parentName:"ul"},"A customer ",(0,i.kt)("inlineCode",{parentName:"li"},"name")," ",(0,i.kt)(c,{mdxType:"Required"},"(Required)"),": name of the customer.")),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"You cannot change the ",(0,i.kt)("inlineCode",{parentName:"p"},"customer_id")," of a customer with an active subscription (active plan assigned to this customer).")),(0,i.kt)("h3",{id:"additional-fields"},"Additional fields"),(0,i.kt)("p",null,"In addition to this, you can add optional information to a customer. ",(0,i.kt)("strong",{parentName:"p"},"This additional information is useful for invoicing.")," Here is the list of optional fields that can be retrieved for a customer:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"An ",(0,i.kt)("inlineCode",{parentName:"li"},"address_line1")," ",(0,i.kt)(p,{mdxType:"Optional"},"(Optional)"),": first line of the billing address of your customer;"),(0,i.kt)("li",{parentName:"ul"},"An ",(0,i.kt)("inlineCode",{parentName:"li"},"address_line2"),(0,i.kt)(p,{mdxType:"Optional"},"(Optional)"),": second line of the billing address of your customer;"),(0,i.kt)("li",{parentName:"ul"},"A ",(0,i.kt)("inlineCode",{parentName:"li"},"city")," ",(0,i.kt)(p,{mdxType:"Optional"},"(Optional)"),": city of the customer's billing address;"),(0,i.kt)("li",{parentName:"ul"},"A ",(0,i.kt)("inlineCode",{parentName:"li"},"country")," ",(0,i.kt)(p,{mdxType:"Optional"},"(Optional)"),": country code of the customer's billing address;"),(0,i.kt)("li",{parentName:"ul"},"An ",(0,i.kt)("inlineCode",{parentName:"li"},"email")," ",(0,i.kt)(p,{mdxType:"Optional"},"(Optional)"),": main email of the customer;"),(0,i.kt)("li",{parentName:"ul"},"A ",(0,i.kt)("inlineCode",{parentName:"li"},"legal_name")," ",(0,i.kt)(p,{mdxType:"Optional"},"(Optional)"),": legal company name of the customer;"),(0,i.kt)("li",{parentName:"ul"},"A ",(0,i.kt)("inlineCode",{parentName:"li"},"legal_number")," ",(0,i.kt)(p,{mdxType:"Optional"},"(Optional)"),": legal company number of the customer;"),(0,i.kt)("li",{parentName:"ul"},"A ",(0,i.kt)("inlineCode",{parentName:"li"},"logo_url")," ",(0,i.kt)(p,{mdxType:"Optional"},"(Optional)"),": logo URL of the customer;"),(0,i.kt)("li",{parentName:"ul"},"A ",(0,i.kt)("inlineCode",{parentName:"li"},"phone")," ",(0,i.kt)(p,{mdxType:"Optional"},"(Optional)"),": phone number of the customer;"),(0,i.kt)("li",{parentName:"ul"},"A ",(0,i.kt)("inlineCode",{parentName:"li"},"state")," ",(0,i.kt)(p,{mdxType:"Optional"},"(Optional)"),": state of the customer's billing address;"),(0,i.kt)("li",{parentName:"ul"},"An ",(0,i.kt)("inlineCode",{parentName:"li"},"url")," ",(0,i.kt)(p,{mdxType:"Optional"},"(Optional)"),": custom URL of the customer (domain url);"),(0,i.kt)("li",{parentName:"ul"},"A ",(0,i.kt)("inlineCode",{parentName:"li"},"vat_rate")," ",(0,i.kt)(p,{mdxType:"Optional"},"(Optional)"),": custom VAT applied to the customer. (It will override the one defined at organization level);"),(0,i.kt)("li",{parentName:"ul"},"A ",(0,i.kt)("inlineCode",{parentName:"li"},"zipcode")," ",(0,i.kt)(p,{mdxType:"Optional"},"(Optional)"),": zipcode of the customer's billing address.")),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"These additional fields can be added later on by updating a customer.")),(0,i.kt)("h3",{id:"example-of-customers-information"},"Example of customer's information"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Customer\'s information example"',title:"\"Customer's",information:!0,'example"':!0},'{\n  "customer": {\n    "customer_id": "5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba",\n    "address_line1": "5230 Penfield Ave",\n    "address_line2": null,\n    "city": "Woodland Hills",\n    "country": "US",\n    "email": "dinesh@piedpiper.test",\n    "legal_name": "Coleman-Blair",\n    "legal_number": "49-008-2965",\n    "logo_url": "http://hooli.com/logo.png",\n    "name": "Gavin Belson",\n    "phone": "1-171-883-3711 x245",\n    "state": "CA",\n    "url": "http://hooli.com",\n    "vat_rate": 12.5,\n    "zipcode": "91364"\n  }\n}\n')),(0,i.kt)("h2",{id:"update-a-customer"},"Update a customer"),(0,i.kt)("p",null,"You can update a customer anytime you need by using the same endpoint. To do so, you just need to pass in the payload the ",(0,i.kt)("inlineCode",{parentName:"p"},"customer_id")," of the customer you want to update."),(0,i.kt)("h2",{id:"delete-a-customer"},"Delete a customer"),(0,i.kt)("p",null,"You can delete a customer ",(0,i.kt)("strong",{parentName:"p"},"only if this customer does not have an active subscription")," (active plan assigned to this customer)."),(0,i.kt)("h2",{id:"assigning-a-plan-to-a-customer"},"Assigning a plan to a customer"),(0,i.kt)("p",null,"You can create a subscription by assigning a plan to a customer. By creating a subscription, all the charges (base charge and additional charges) are appended to this customer. By ingesting events, the usage will be charged following the prices belonging to the current subscription's plan."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"From both the UI and the API, you can:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Create a subscription by assigning a plan to a customer"),(0,i.kt)("li",{parentName:"ul"},"Change a subscription by assigning a new plan to a customer"),(0,i.kt)("li",{parentName:"ul"},"Terminate a subscription")),(0,i.kt)("h2",{id:"ingesting-events-for-a-customer"},"Ingesting events for a customer"),(0,i.kt)("p",null,"Before sending event to a customer as usage measurement, ",(0,i.kt)("strong",{parentName:"p"},"you must define ",(0,i.kt)("a",{parentName:"strong",href:"./billable-metrics/overview"},"billable metric(s)")," from the UI.")," The ",(0,i.kt)("inlineCode",{parentName:"p"},"code")," of the billable metric is passed as a parameter of the event. Each paying feature of your product is a distinct billable metric and has a proper event ",(0,i.kt)("inlineCode",{parentName:"p"},"code"),"."),(0,i.kt)("p",null,"By sending an event to a customer, you are assigning a usage-based consumption from your application."),(0,i.kt)("p",null,"In Lago, all ingested events must hold a ",(0,i.kt)("inlineCode",{parentName:"p"},"customer_id"),", as shown in the following example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Event example"',title:'"Event','example"':!0},'{\n  "event": {\n    "transaction_id": "__UNIQUE_ID__", // unique id of the event\n    "customer_id": "__CUSTOMER_ID__", // customer_id of your customer\n    "code": "__EVENT_CODE__", // code of the targeted billable metric\n    "timestamp": 1650893379,\n    "properties": {\n      "custom_field": 12\n    }\n  }\n}\n')),(0,i.kt)("p",null,"Events represents the data delivered to Lago application that are aggregated into billable metrics. At the end of each billable period, Lago automatically aggregates those events into a billable metric with priced units that have been consumed by a customer. By clicking the following link, you can ",(0,i.kt)("a",{parentName:"p",href:"./billable-metrics/aggregation-types"},"know more about the aggregation types"),"."),(0,i.kt)("h2",{id:"displaying-customer-current-usage"},"Displaying customer current usage"),(0,i.kt)("p",null,"After assigning a plan to a customer and start ingesting usage-based events, it is often useful to know what is the ",(0,i.kt)("strong",{parentName:"p"},"current usage")," of this specific customer during the ongoing billable period.\nThis current usage displays: "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The total amount of usage that will be billed in the next invoice;"),(0,i.kt)("li",{parentName:"ul"},"The breakdown per usage-based charges (number of units consumed and amount to be billed).")),(0,i.kt)("p",null,"To access this feature, select a specific customer and access the ",(0,i.kt)("inlineCode",{parentName:"p"},"Usage")," tab."),(0,i.kt)("p",null,"On top of this, you can fetch via the API the current usage of a specific customer."),(0,i.kt)("h2",{id:"invoicing-a-customer"},"Invoicing a customer"),(0,i.kt)("p",null,"Lago automatically generates an invoice for all your customers at the end of each billing period."),(0,i.kt)("p",null,"Click on the following link to ",(0,i.kt)("a",{parentName:"p",href:"./invoicing/overview"},"know more about invoicing with Lago"),"."),(0,i.kt)("h2",{id:"customer-slug"},"Customer Slug"),(0,i.kt)("p",null,"The customer slug is a unique identifier for a customer that will be used to build an invoice number.\nThis slug respect this format: "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"LAG-1234-001")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"LAG")," is the first 3 letters of the customer's organization"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"1234")," is the last 4 characters of the customer's organization's id"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"001")," is the ",(0,i.kt)("inlineCode",{parentName:"li"},"sequential_id")," of the customer scoped on the organization")))}d.isMDXComponent=!0}}]);