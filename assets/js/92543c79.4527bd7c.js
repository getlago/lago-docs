"use strict";(self.webpackChunklago_doc=self.webpackChunklago_doc||[]).push([[5662],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>c});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=a.createContext({}),u=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),s=u(n),c=l,g=s["".concat(p,".").concat(c)]||s[c]||m[c]||r;return n?a.createElement(g,i(i({ref:t},d),{},{components:n})):a.createElement(g,i({ref:t},d))}));function c(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=s;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var u=2;u<r;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(7294),l=n(6010);const r="tabItem_Ymn6";function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,l.Z)(r,i),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>c});var a=n(7462),l=n(7294),r=n(6010),i=n(2389),o=n(7392),p=n(7094),u=n(2466);const d="tabList__CuJ",m="tabItem_LNqP";function s(e){var t,n;const{lazy:i,block:s,defaultValue:c,values:g,groupId:b,className:k}=e,N=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),y=null!=g?g:N.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),f=(0,o.l)(y,((e,t)=>e.value===t.value));if(f.length>0)throw new Error('Docusaurus error: Duplicate values "'+f.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const v=null===c?c:null!=(t=null!=c?c:null==(n=N.find((e=>e.props.default)))?void 0:n.props.value)?t:N[0].props.value;if(null!==v&&!y.some((e=>e.value===v)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+y.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:_,setTabGroupChoices:h}=(0,p.U)(),[T,C]=(0,l.useState)(v),O=[],{blockElementScrollPositionUntilNextRender:x}=(0,u.o5)();if(null!=b){const e=_[b];null!=e&&e!==T&&y.some((t=>t.value===e))&&C(e)}const A=e=>{const t=e.currentTarget,n=O.indexOf(t),a=y[n].value;a!==T&&(x(t),C(a),null!=b&&h(b,String(a)))},P=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{var a;const t=O.indexOf(e.currentTarget)+1;n=null!=(a=O[t])?a:O[0];break}case"ArrowLeft":{var l;const t=O.indexOf(e.currentTarget)-1;n=null!=(l=O[t])?l:O[O.length-1];break}}null==(t=n)||t.focus()};return l.createElement("div",{className:(0,r.Z)("tabs-container",d)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":s},k)},y.map((e=>{let{value:t,label:n,attributes:i}=e;return l.createElement("li",(0,a.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:e=>O.push(e),onKeyDown:P,onFocus:A,onClick:A},i,{className:(0,r.Z)("tabs__item",m,null==i?void 0:i.className,{"tabs__item--active":T===t})}),null!=n?n:t)}))),i?(0,l.cloneElement)(N.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},N.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==T})))))}function c(e){const t=(0,i.Z)();return l.createElement(s,(0,a.Z)({key:String(t)},e))}},2698:(e,t,n)=>{n.r(t),n.d(t,{Comment:()=>g,Optional:()=>c,PostEndpoint:()=>b,Required:()=>s,assets:()=>d,contentTitle:()=>p,default:()=>N,frontMatter:()=>o,metadata:()=>u,toc:()=>m});var a=n(7462),l=(n(7294),n(3905)),r=n(5488),i=n(5162);const o={sidebar_position:3},p="Update Billable metric",u={unversionedId:"api/billable_metrics/update-billable-metric",id:"api/billable_metrics/update-billable-metric",title:"Update Billable metric",description:"Route",source:"@site/docs/api/02_billable_metrics/update-billable-metric.mdx",sourceDirName:"api/02_billable_metrics",slug:"/api/billable_metrics/update-billable-metric",permalink:"/docs/api/billable_metrics/update-billable-metric",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"api",previous:{title:"Create billable metric",permalink:"/docs/api/billable_metrics/create-billable-metric"},next:{title:"Destroy billable metric",permalink:"/docs/api/billable_metrics/destroy-billable-metric"}},d={},m=[{value:"Route",id:"route",level:2},{value:"Usage",id:"usage",level:2},{value:"Arguments",id:"arguments",level:2},{value:"Group - One dimension",id:"group---one-dimension",level:3},{value:"Group - Two dimensions",id:"group---two-dimensions",level:3},{value:"Responses",id:"responses",level:2}],s=e=>{let{children:t,color:n}=e;return(0,l.kt)("span",{style:{color:"#DC3309",fontSize:"13px"}},t)},c=e=>{let{children:t,color:n}=e;return(0,l.kt)("span",{style:{color:"#8C95A6",fontSize:"13px"}},t)},g=e=>{let{children:t,color:n}=e;return(0,l.kt)("span",{style:{fontSize:"12px"}},t)},b=e=>{let{children:t,color:n}=e;return(0,l.kt)("span",{style:{color:"#008559",fontSize:"12px"}},t)},k={toc:m,Required:s,Optional:c,Comment:g,PostEndpoint:b};function N(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"update-billable-metric"},"Update Billable metric"),(0,l.kt)("h2",{id:"route"},"Route"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-curl",metastring:'title="PUT"',title:'"PUT"'},"/api/v1/billable_metrics/:code\n")),(0,l.kt)("h2",{id:"usage"},"Usage"),(0,l.kt)(r.Z,{groupId:"prog-language",mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"curl",label:"Curl",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'LAGO_URL="https://api.getlago.com"\nAPI_KEY="__YOUR_API_KEY__"\n\ncurl --location --request PUT "$LAGO_URL/api/v1/billable_metrics/:code" \\\n  --header "Authorization: Bearer $API_KEY" \\\n  --header \'Content-Type: application/json\' \\\n  --data-raw \'{\n    "billable_metric": {\n      "name": "bm_name",\n      "code": "bm_code",\n      "description": "description",\n      "aggregation_type": "sum_agg",\n      "field_name": "amount_sum",\n      "group": {\n        "key": "region",\n        "value": ["USA", "EUROPE"]\n      }\n    }\n  }\'\n'))),(0,l.kt)(i.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"from lago_python_client import Client\nfrom lago_python_client.models import BillableMetric\n\nclient = Client(api_key='__YOUR_API_KEY__')\n\nbillable_metric = BillableMetric(\n  name='name',\n  code='code_first',\n  description='desc',\n  aggregation_type='sum_agg',\n  field_name='amount_sum'\n)\nclient.billable_metrics().update(billable_metric, 'code')\n"))),(0,l.kt)(i.Z,{value:"ruby",label:"Ruby",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ruby"},"require 'lago-ruby-client'\n\nclient = Lago::Api::Client.new({api_key: '__YOUR_API_KEY__'})\n\nclient.billable_metrics.update({\n    name: 'BM1',\n    code: 'code_bm',\n    description: 'description',\n    aggregation_type: 'sum_agg',\n    field_name: 'amount_sum',\n}, 'code')\n"))),(0,l.kt)(i.Z,{value:"javascript",label:"Node.js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import BillableMetric from 'lago-nodejs-client/billable_metric'\n\nlet client = new Client('__API_KEY__')\n\nlet billableMetric = new BillableMetric({name: 'name1', code: 'code1', aggregationType: 'sum_agg',\n  fieldName: 'field_name'\n})\nawait client.updateBillableMetric(billableMetric, 'code');\n"))),(0,l.kt)(i.Z,{value:"go",label:"Go",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'  import "fmt"\n  import "github.com/getlago/lago-go-client"\n\n  func main() {\n    lagoClient := lago.New().\n      SetApiKey("__YOUR_API_KEY__")\n\n    bmInput := &lago.BillableMetricInput{\n      Name:            "First Billable Metric",\n      Code:            "first_bm",\n      Description:     "My First Billable Metric"\n      AggregationType: lago.CountAggregation,\n      FieldName:       "sum",\n    }\n\n    billableMetric, err := lagoClient.BillableMetric().Update(bmInput)\n    if err != nil {\n      // Error is *lago.Error\n      panic(err)\n    }\n\n    // billableMetric is *lago.BillableMetric\n    fmt.Println(billableMetric)\n  }\n'))),(0,l.kt)(i.Z,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},'using System.Collections.Generic;\nusing System.Diagnostics;\nusing Org.OpenAPITools.Api;\nusing Org.OpenAPITools.Client;\nusing Org.OpenAPITools.Model;\n\nnamespace Example\n{\n  public class UpdateBillableMetricExample\n  {\n      public static void Main()\n      {\n          Configuration.Default.BasePath = "https://api.getlago.com/api/v1";\n          // Configure HTTP bearer authorization: bearerAuth\n          Configuration.Default.AccessToken = "YOUR_ACCESS_TOKEN";\n\n          var apiInstance = new BillableMetricsApi(Configuration.Default);\n          var code = "example_code";  // string | Code of the existing billable metric\n          var billableMetricInput = new BillableMetricInput(); // BillableMetricInput | Update an existing billable metric\n\n          try\n          {\n              // Update an existing billable metric\n              BillableMetric result = apiInstance.UpdateBillableMetric(code, billableMetricInput);\n              Debug.WriteLine(result);\n          }\n          catch (ApiException e)\n          {\n              Debug.Print("Exception when calling BillableMetricsApi.UpdateBillableMetric: " + e.Message );\n              Debug.Print("Status Code: "+ e.ErrorCode);\n              Debug.Print(e.StackTrace);\n          }\n      }\n  }\n}\n')))),(0,l.kt)("h2",{id:"arguments"},"Arguments"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "billable_metric": {\n    "name": "bm_name",\n    "code": "bm_code",\n    "description": "description",\n    "aggregation_type": "sum_agg",\n    "field_name": "amount_sum",\n    "group": {\n      "key": "country",\n      "values": ["france", "italy", "spain"]\n    }\n  }\n}\n')),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Attributes"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"name"),(0,l.kt)("td",{parentName:"tr",align:null},"String ","\xa0"," ","\xa0"," ","\xa0",(0,l.kt)(c,{mdxType:"Optional"},(0,l.kt)("strong",{parentName:"td"},"Optional"))),(0,l.kt)("td",{parentName:"tr",align:null},"Billable metric name.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"code"),(0,l.kt)("td",{parentName:"tr",align:null},"String ","\xa0"," ","\xa0"," ","\xa0",(0,l.kt)(c,{mdxType:"Optional"},(0,l.kt)("strong",{parentName:"td"},"Optional"))),(0,l.kt)("td",{parentName:"tr",align:null},"Code identifying the billable metric.",(0,l.kt)("br",null),"It won't be updated if billable metric is attached to any subscriptions")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"description"),(0,l.kt)("td",{parentName:"tr",align:null},"String ","\xa0"," ","\xa0"," ","\xa0",(0,l.kt)(c,{mdxType:"Optional"},(0,l.kt)("strong",{parentName:"td"},"Optional"))),(0,l.kt)("td",{parentName:"tr",align:null},"Description of the billable metric")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"aggregation_type"),(0,l.kt)("td",{parentName:"tr",align:null},"String ","\xa0"," ","\xa0"," ","\xa0",(0,l.kt)(c,{mdxType:"Optional"},(0,l.kt)("strong",{parentName:"td"},"Optional"))),(0,l.kt)("td",{parentName:"tr",align:null},"Aggregation type that is used in event calculations.",(0,l.kt)("br",null),"It can be ",(0,l.kt)("inlineCode",{parentName:"td"},"count_agg")," (metered), ",(0,l.kt)("inlineCode",{parentName:"td"},"sum_agg")," (metered), ",(0,l.kt)("inlineCode",{parentName:"td"},"max_agg")," (metered), ",(0,l.kt)("inlineCode",{parentName:"td"},"unique_count_agg")," (metered) or ",(0,l.kt)("inlineCode",{parentName:"td"},"recurring_count_agg")," (persistent)",(0,l.kt)("br",null),"It won't be updated if billable metric is attached to any subscriptions")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"field_name"),(0,l.kt)("td",{parentName:"tr",align:null},"String ","\xa0"," ","\xa0"," ","\xa0",(0,l.kt)(c,{mdxType:"Optional"},(0,l.kt)("strong",{parentName:"td"},"Optional"))),(0,l.kt)("td",{parentName:"tr",align:null},"Field name used in events.",(0,l.kt)("br",null),"It won't be updated if billable metric is attached to any subscriptions")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"group"),(0,l.kt)("td",{parentName:"tr",align:null},"Object ","\xa0"," ","\xa0"," ","\xa0",(0,l.kt)(c,{mdxType:"Optional"},(0,l.kt)("strong",{parentName:"td"},"Optional"))),(0,l.kt)("td",{parentName:"tr",align:null},"Group (one or two dimensions) for pricing differently the billable metric")))),(0,l.kt)("h3",{id:"group---one-dimension"},"Group - One dimension"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Attributes"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"key"),(0,l.kt)("td",{parentName:"tr",align:null},"String ","\xa0"," ","\xa0"," ","\xa0",(0,l.kt)(s,{mdxType:"Required"},(0,l.kt)("strong",{parentName:"td"},"Required"))),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the event's field used for grouping")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"values"),(0,l.kt)("td",{parentName:"tr",align:null},"Array ","\xa0"," ","\xa0"," ","\xa0",(0,l.kt)(s,{mdxType:"Required"},(0,l.kt)("strong",{parentName:"td"},"Required"))),(0,l.kt)("td",{parentName:"tr",align:null},"Array of string representing all possible values")))),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "group": {\n    "key": "country",\n    "values": ["france", "italy", "spain"]\n  }\n}\n')),(0,l.kt)("h3",{id:"group---two-dimensions"},"Group - Two dimensions"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Attributes"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"key"),(0,l.kt)("td",{parentName:"tr",align:null},"String ","\xa0"," ","\xa0"," ","\xa0",(0,l.kt)(s,{mdxType:"Required"},(0,l.kt)("strong",{parentName:"td"},"Required"))),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the first event's field used for grouping")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"values"),(0,l.kt)("td",{parentName:"tr",align:null},"Array ","\xa0"," ","\xa0"," ","\xa0",(0,l.kt)(s,{mdxType:"Required"},(0,l.kt)("strong",{parentName:"td"},"Required"))),(0,l.kt)("td",{parentName:"tr",align:null},"Array of objects representing all possible values")))),(0,l.kt)("p",null,"Values:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Attributes"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"name"),(0,l.kt)("td",{parentName:"tr",align:null},"String ","\xa0"," ","\xa0"," ","\xa0",(0,l.kt)(s,{mdxType:"Required"},(0,l.kt)("strong",{parentName:"td"},"Required"))),(0,l.kt)("td",{parentName:"tr",align:null},"Value for the first dimension of the group")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"key"),(0,l.kt)("td",{parentName:"tr",align:null},"Array ","\xa0"," ","\xa0"," ","\xa0",(0,l.kt)(s,{mdxType:"Required"},(0,l.kt)("strong",{parentName:"td"},"Required"))),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the second event's field used for grouping")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"values"),(0,l.kt)("td",{parentName:"tr",align:null},"Array ","\xa0"," ","\xa0"," ","\xa0",(0,l.kt)(s,{mdxType:"Required"},(0,l.kt)("strong",{parentName:"td"},"Required"))),(0,l.kt)("td",{parentName:"tr",align:null},"Array of string representing all possible values of the second dimension")))),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "group": {\n    "key": "cloud",\n    "values": [\n      {\n        "name": "AWS",\n        "key": "region",\n        "values": ["USA", "EUROPE"]\n      }, {\n        "name": "Google",\n        "key": "region",\n        "values": ["USA"]\n      }\n    ]\n  }\n}\n')),(0,l.kt)("h2",{id:"responses"},"Responses"),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"200",label:"HTTP 200",default:!0,mdxType:"TabItem"},"The billable metric was successfully updated",(0,l.kt)("p",null,"  Returns an ",(0,l.kt)("a",{parentName:"p",href:"./billable-metric-object"},"billable metric")," object.")),(0,l.kt)(i.Z,{value:"400",label:"HTTP 400",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "status": 400,\n  "error": "Bad Request"\n}\n')),(0,l.kt)("p",null,"  The ",(0,l.kt)("inlineCode",{parentName:"p"},"billable_metric")," json root is not present in the request body.")),(0,l.kt)(i.Z,{value:"401",label:"HTTP 401",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "status": 401,\n  "error": "Unauthorized"\n}\n')),(0,l.kt)("p",null,"  Access to the API endpoint is unhautorized."),(0,l.kt)("p",null,"  ",(0,l.kt)("strong",{parentName:"p"},"Possible reasons are:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"Authorization")," header is missing"),(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"Authorization")," header does not contain the API key"),(0,l.kt)("li",{parentName:"ul"},"The Api key is invalid or expired"))),(0,l.kt)(i.Z,{value:"404",label:"HTTP 404",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "status": 404,\n  "error": "Not Found",\n  "code": "billable_metric_not_found"\n}\n')),(0,l.kt)("p",null,"  The ",(0,l.kt)("inlineCode",{parentName:"p"},"billable_metric")," was not found.")),(0,l.kt)(i.Z,{value:"422",label:"HTTP 422",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "status": 422,\n  "error": "Unprocessable entity",\n  "code": "validation_errors",\n  "error_details": {\n    "field": ["error"]\n  }\n}\n')),(0,l.kt)("p",null,"  ",(0,l.kt)("strong",{parentName:"p"},"Possible errors:")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Code"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"name")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"value_is_mandatory")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"name")," value is missing")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"code")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"value_is_mandatory")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"code")," value is missing")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"code")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"value_already_exists")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"code")," value is already used for another billable metric")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"field_name")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"value_is_mandatory")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"field_name")," value is missing")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"aggregation_type")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"value_is_invalid")),(0,l.kt)("td",{parentName:"tr",align:null},"Provided ",(0,l.kt)("inlineCode",{parentName:"td"},"aggregation_type")," value is invalid")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"group")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"value_is_invalid")),(0,l.kt)("td",{parentName:"tr",align:null},"Format of provided JSON for ",(0,l.kt)("inlineCode",{parentName:"td"},"group")," is invalid")))))))}N.isMDXComponent=!0}}]);