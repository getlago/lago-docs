"use strict";(self.webpackChunklago_doc=self.webpackChunklago_doc||[]).push([[6888],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>m});var a=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var p=a.createContext({}),u=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=u(e.components);return a.createElement(p.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,r=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),c=u(t),m=l,g=c["".concat(p,".").concat(m)]||c[m]||d[m]||r;return t?a.createElement(g,i(i({ref:n},s),{},{components:t})):a.createElement(g,i({ref:n},s))}));function m(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=t.length,i=new Array(r);i[0]=c;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var u=2;u<r;u++)i[u]=t[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},5162:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(7294),l=t(6010);const r="tabItem_Ymn6";function i(e){let{children:n,hidden:t,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,l.Z)(r,i),hidden:t},n)}},5488:(e,n,t)=>{t.d(n,{Z:()=>m});var a=t(7462),l=t(7294),r=t(6010),i=t(2389),o=t(7392),p=t(7094),u=t(2466);const s="tabList__CuJ",d="tabItem_LNqP";function c(e){var n,t;const{lazy:i,block:c,defaultValue:m,values:g,groupId:_,className:b}=e,k=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=g?g:k.map((e=>{let{props:{value:n,label:t,attributes:a}}=e;return{value:n,label:t,attributes:a}})),y=(0,o.l)(h,((e,n)=>e.value===n.value));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const f=null===m?m:null!=(n=null!=m?m:null==(t=k.find((e=>e.props.default)))?void 0:t.props.value)?n:k[0].props.value;if(null!==f&&!h.some((e=>e.value===f)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+f+'" but none of its children has the corresponding value. Available values are: '+h.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:N,setTabGroupChoices:v}=(0,p.U)(),[T,C]=(0,l.useState)(f),O=[],{blockElementScrollPositionUntilNextRender:I}=(0,u.o5)();if(null!=_){const e=N[_];null!=e&&e!==T&&h.some((n=>n.value===e))&&C(e)}const E=e=>{const n=e.currentTarget,t=O.indexOf(n),a=h[t].value;a!==T&&(I(n),C(a),null!=_&&v(_,String(a)))},P=e=>{var n;let t=null;switch(e.key){case"ArrowRight":{var a;const n=O.indexOf(e.currentTarget)+1;t=null!=(a=O[n])?a:O[0];break}case"ArrowLeft":{var l;const n=O.indexOf(e.currentTarget)-1;t=null!=(l=O[n])?l:O[O.length-1];break}}null==(n=t)||n.focus()};return l.createElement("div",{className:(0,r.Z)("tabs-container",s)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":c},b)},h.map((e=>{let{value:n,label:t,attributes:i}=e;return l.createElement("li",(0,a.Z)({role:"tab",tabIndex:T===n?0:-1,"aria-selected":T===n,key:n,ref:e=>O.push(e),onKeyDown:P,onFocus:E,onClick:E},i,{className:(0,r.Z)("tabs__item",d,null==i?void 0:i.className,{"tabs__item--active":T===n})}),null!=t?t:n)}))),i?(0,l.cloneElement)(k.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},k.map(((e,n)=>(0,l.cloneElement)(e,{key:n,hidden:e.props.value!==T})))))}function m(e){const n=(0,i.Z)();return l.createElement(c,(0,a.Z)({key:String(n)},e))}},8059:(e,n,t)=>{t.r(n),t.d(n,{Comment:()=>g,Optional:()=>m,PostEndpoint:()=>_,Required:()=>c,assets:()=>s,contentTitle:()=>p,default:()=>k,frontMatter:()=>o,metadata:()=>u,toc:()=>d});var a=t(7462),l=(t(7294),t(3905)),r=t(5488),i=t(5162);const o={sidebar_position:2},p="Update plan",u={unversionedId:"api/plans/update-plan",id:"api/plans/update-plan",title:"Update plan",description:"Route",source:"@site/docs/api/03_plans/update-plan.mdx",sourceDirName:"api/03_plans",slug:"/api/plans/update-plan",permalink:"/docs/api/plans/update-plan",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"api",previous:{title:"Create plan",permalink:"/docs/api/plans/create-plan"},next:{title:"Destroy plan",permalink:"/docs/api/plans/destroy-plan"}},s={},d=[{value:"Route",id:"route",level:2},{value:"Usage",id:"usage",level:2},{value:"Arguments",id:"arguments",level:2},{value:"Plan attributes",id:"plan-attributes",level:3},{value:"Charge attributes",id:"charge-attributes",level:3},{value:"Responses",id:"responses",level:2}],c=e=>{let{children:n,color:t}=e;return(0,l.kt)("span",{style:{color:"#DC3309",fontSize:"13px"}},n)},m=e=>{let{children:n,color:t}=e;return(0,l.kt)("span",{style:{color:"#8C95A6",fontSize:"13px"}},n)},g=e=>{let{children:n,color:t}=e;return(0,l.kt)("span",{style:{fontSize:"12px"}},n)},_=e=>{let{children:n,color:t}=e;return(0,l.kt)("span",{style:{color:"#008559",fontSize:"12px"}},n)},b={toc:d,Required:c,Optional:m,Comment:g,PostEndpoint:_};function k(e){let{components:n,...t}=e;return(0,l.kt)("wrapper",(0,a.Z)({},b,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"update-plan"},"Update plan"),(0,l.kt)("h2",{id:"route"},"Route"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-curl",metastring:'title="PUT"',title:'"PUT"'},"/api/v1/plans/:code\n")),(0,l.kt)("h2",{id:"usage"},"Usage"),(0,l.kt)(r.Z,{groupId:"prog-language",mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"curl",label:"Curl",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'LAGO_URL="https://api.getlago.com"\nAPI_KEY="__YOUR_API_KEY__"\n\ncurl --location --request PUT "$LAGO_URL/api/v1/plans/basic" \\\n--header "Authorization: Bearer $API_KEY" \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n  "plan": {\n    "name": "Basic",\n    "code": "basic",\n    "interval": "yearly",\n    "description": "This is a basic plan description",\n    "amount_cents": 100000,\n    "amount_currency": "USD",\n    "trial_period": 5.0,\n    "pay_in_advance": true,\n    "bill_charges_monthly": true,\n    "charges": [\n      {\n        "billable_metric_id": "__BILLABLE_METRIC_ID__",\n        "charge_model": "standard",\n        "properties": {\n          "amount": "0.20"\n        }\n      },\n      {\n      "billable_metric_id": "__BILLABLE_METRIC_ID__",\n      "charge_model": "graduated",\n      "properties": [\n        {\n          "to_value": 10,\n          "from_value": 0,\n          "flat_amount": "0",\n          "per_unit_amount": "0.010"\n        },\n        {\n          "to_value": null,\n          "from_value": 11,\n          "flat_amount": "0",\n          "per_unit_amount": "0.05"\n        }\n      ]\n    },\n    {\n      "billable_metric_id": "__BILLABLE_METRIC_ID__",\n      "charge_model": "package",\n      "properties": {\n        "amount": "90",\n        "free_units": 9000,\n        "package_size": 1000\n        }\n    },\n    {\n      "billable_metric_id": "__BILLABLE_METRIC_ID__",\n      "charge_model": "percentage",\n      "properties": {\n        "rate": "0.5",\n        "fixed_amount": "1.5",\n        "free_units_per_events": 2,\n        "free_units_per_total_aggregation": null\n        }\n      }\n    ]\n  }\n}\'\n'))),(0,l.kt)(i.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"from lago_python_client import Client\nfrom lago_python_client.models import Plan, Charges, Charge\n\nclient = Client(api_key='__YOUR_API_KEY__')\n\ncharge = Charge(\n  billable_metric_id='id',\n  charge_model='standard',\n  properties={\n    'amount': '0.22'\n  }\n)\ncharges = Charges(__root__=[charge])\n\nplan = Plan(\n  name='name',\n  code='code_first',\n  amount_cents=1000,\n  amount_currency='EUR',\n  description='desc',\n  interval='weekly',\n  pay_in_advance=True,\n  charges=charges\n)\nclient.plans().update(plan)\n"))),(0,l.kt)(i.Z,{value:"ruby",label:"Ruby",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ruby"},"require 'lago-ruby-client'\n\nclient = Lago::Api::Client.new({api_key: '__YOUR_API_KEY__'})\n\nplan = {\n  name: 'plan name',\n  code: 'code',\n  interval: 'monthly',\n  description: 'description',\n  amount_cents: 100,\n  amount_currency: 'EUR',\n  pay_in_advance: false,\n  charges: [\n    {\n      billable_metric_id: 'id',\n      charge_model: 'standard',\n      properties: {\n        amount: 0.22\n      }\n    }\n  ]\n}\n\nclient.plans.update(plan)\n"))),(0,l.kt)(i.Z,{value:"javascript",label:"Node.js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import Plan from 'lago-nodejs-client/plan'\nimport Charge from 'lago-nodejs-client/charge'\n\nlet client = new Client('__API_KEY__')\n\nlet charge = new Charge({billableMetricId: 'billable_metric_id', chargeModel: 'standard'})\nlet charges = [charge]\nlet plan = new Plan({name: 'name1', code: 'code1', interval: 'weekly', amountCents: 1000,\n  amountCurrency: 'USD', payInAdvance: true, trialPeriod: 2, description: 'decs',\n  billChargesMonthly: false, charges: charges\n})\nawait client.updatePlan(plan);\n"))),(0,l.kt)(i.Z,{value:"go",label:"Go",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'  import "fmt"\n  import "github.com/getlago/lago-go-client"\n\n  func main() {\n    lagoClient := lago.New().\n      SetApiKey("__YOUR_API_KEY__")\n    \n    planInput := &lago.PlanInput{\n      Name:           "Plan Go",\n            Code:           "plan_go",\n            Interval:       lago.PlanMonthly,\n            PayInAdvance:   true,\n            AmountCents:    1500,\n            AmountCurrency: lago.EUR,\n    }\n\n    planResult, err := lagoClient.Plan().Update(planInput)\n    if err != nil {\n      // Error is *lago.Error\n      panic(err)\n    }\n      \n    // plan is *lago.Plan\n    fmt.Println(plan)\n  }\n')))),(0,l.kt)("h2",{id:"arguments"},"Arguments"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n   "plan": {\n    "name": "Basic",\n    "code": "basic",\n    "interval": "yearly",\n    "description": "This is a basic plan description",\n    "amount_cents": 100000,\n    "amount_currency": "USD",\n    "trial_period": 5.0,\n    "pay_in_advance": true,\n    "bill_charges_monthly": true,\n    "charges": [\n      {\n        "billable_metric_id": "__BILLABLE_METRIC_ID__",\n        "charge_model": "standard",\n        "properties": {\n          "amount": "0.20"\n        }\n      },\n      {\n      "billable_metric_id": "__BILLABLE_METRIC_ID__",\n      "charge_model": "graduated",\n      "properties": [\n        {\n          "to_value": 10,\n          "from_value": 0,\n          "flat_amount": "0",\n          "per_unit_amount": "0.010"\n        },\n        {\n          "to_value": null,\n          "from_value": 11,\n          "flat_amount": "0",\n          "per_unit_amount": "0.05"\n        }\n      ]\n    },\n    {\n      "billable_metric_id": "__BILLABLE_METRIC_ID__",\n      "charge_model": "package",\n      "properties": {\n        "amount": "90",\n        "free_units": 9000,\n        "package_size": 1000\n        }\n    },\n    {\n      "billable_metric_id": "__BILLABLE_METRIC_ID__",\n      "charge_model": "percentage",\n      "properties": {\n        "rate": "0.5",\n        "fixed_amount": "1.5",\n        "free_units_per_events": 2,\n        "free_units_per_total_aggregation": null\n        }\n      }\n    ]\n  }\n}\n')),(0,l.kt)("h3",{id:"plan-attributes"},"Plan attributes"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Attributes"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"name"),(0,l.kt)("td",{parentName:"tr",align:null},"String ","\xa0"," ","\xa0"," ","\xa0",(0,l.kt)(m,{mdxType:"Optional"},(0,l.kt)("strong",{parentName:"td"},"Optional"))),(0,l.kt)("td",{parentName:"tr",align:null},"Plan name")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"code"),(0,l.kt)("td",{parentName:"tr",align:null},"String ","\xa0"," ","\xa0"," ","\xa0",(0,l.kt)(m,{mdxType:"Optional"},(0,l.kt)("strong",{parentName:"td"},"Optional"))),(0,l.kt)("td",{parentName:"tr",align:null},"Code identifying the Plan",(0,l.kt)("br",null),"Cannot be updated if the plan is linked to a subscription")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"interval"),(0,l.kt)("td",{parentName:"tr",align:null},"String ","\xa0"," ","\xa0"," ","\xa0",(0,l.kt)(m,{mdxType:"Optional"},(0,l.kt)("strong",{parentName:"td"},"Optional"))),(0,l.kt)("td",{parentName:"tr",align:null},"Interval used for subscription billing.",(0,l.kt)("br",null),"It can be ",(0,l.kt)("inlineCode",{parentName:"td"},"yearly"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"monthly")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"weekly"),(0,l.kt)("br",null),"Cannot be updated if the plan is linked to a subscription")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"description"),(0,l.kt)("td",{parentName:"tr",align:null},"String ","\xa0"," ","\xa0"," ","\xa0",(0,l.kt)(m,{mdxType:"Optional"},(0,l.kt)("strong",{parentName:"td"},"Optional"))),(0,l.kt)("td",{parentName:"tr",align:null},"Description of the plan")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount_cents"),(0,l.kt)("td",{parentName:"tr",align:null},"Integer ","\xa0"," ","\xa0"," ","\xa0",(0,l.kt)(m,{mdxType:"Optional"},(0,l.kt)("strong",{parentName:"td"},"Optional"))),(0,l.kt)("td",{parentName:"tr",align:null},"Amount of the plan",(0,l.kt)("br",null),"Cannot be updated if the plan is linked to a subscription")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount_currency"),(0,l.kt)("td",{parentName:"tr",align:null},"String ","\xa0"," ","\xa0"," ","\xa0",(0,l.kt)(m,{mdxType:"Optional"},(0,l.kt)("strong",{parentName:"td"},"Optional"))),(0,l.kt)("td",{parentName:"tr",align:null},"Currency of the amount",(0,l.kt)("br",null),"Cannot be updated if the plan is linked to a subscription")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"trial_period"),(0,l.kt)("td",{parentName:"tr",align:null},"Float ","\xa0"," ","\xa0"," ","\xa0",(0,l.kt)(m,{mdxType:"Optional"},(0,l.kt)("strong",{parentName:"td"},"Optional"))),(0,l.kt)("td",{parentName:"tr",align:null},"Number of free days",(0,l.kt)("br",null),"Cannot be updated if the plan is linked to a subscription")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"pay_in_advance"),(0,l.kt)("td",{parentName:"tr",align:null},"Boolean ","\xa0"," ","\xa0"," ","\xa0",(0,l.kt)(m,{mdxType:"Optional"},(0,l.kt)("strong",{parentName:"td"},"Optional"))),(0,l.kt)("td",{parentName:"tr",align:null},"Field specifying if payment in advance or in arrear will be used",(0,l.kt)("br",null),"Cannot be updated if the plan is linked to a subscription")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"bill_charges_monthly"),(0,l.kt)("td",{parentName:"tr",align:null},"Boolean ","\xa0"," ","\xa0"," ","\xa0",(0,l.kt)(m,{mdxType:"Optional"},(0,l.kt)("strong",{parentName:"td"},"Optional"))),(0,l.kt)("td",{parentName:"tr",align:null},"Monthly billing will be applied on yearly plan if this field is set to ",(0,l.kt)("inlineCode",{parentName:"td"},"true"),(0,l.kt)("br",null),"Cannot be updated if the plan is linked to a subscription")))),(0,l.kt)("h3",{id:"charge-attributes"},"Charge attributes"),(0,l.kt)("p",null,"Charges cannot be updated if the plan is linked to a subscription\n| Attributes | Type | Description |\n|--|--|--|\n| id | String ","\xa0"," ","\xa0"," ","\xa0",(0,l.kt)(m,{mdxType:"Optional"},(0,l.kt)("strong",{parentName:"p"},"Optional"))," | Charge unique id in Lago application |\n| billable_metric_id | String ","\xa0"," ","\xa0"," ","\xa0",(0,l.kt)(m,{mdxType:"Optional"},(0,l.kt)("strong",{parentName:"p"},"Optional"))," | Billable metric id in lago application |\n| charge_model | String ","\xa0"," ","\xa0"," ","\xa0",(0,l.kt)(m,{mdxType:"Optional"},(0,l.kt)("strong",{parentName:"p"},"Optional"))," | Charge model used in event calculations.",(0,l.kt)("br",null),"It can be ",(0,l.kt)("inlineCode",{parentName:"p"},"standard"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"graduated"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"package")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"percentage")," |\n| properties | JSON ","\xa0"," ","\xa0"," ","\xa0",(0,l.kt)(m,{mdxType:"Optional"},(0,l.kt)("strong",{parentName:"p"},"Optional"))," | Extra data to use for the event calculations.",(0,l.kt)("br",null)," |"),(0,l.kt)("h2",{id:"responses"},"Responses"),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"200",label:"HTTP 200",default:!0,mdxType:"TabItem"},"The plan was updated",(0,l.kt)("p",null,"  Returns a ",(0,l.kt)("a",{parentName:"p",href:"./plan-object"},"plan")," object.")),(0,l.kt)(i.Z,{value:"400",label:"HTTP 400",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "status": 400,\n  "error": "Bad Request"\n}\n')),(0,l.kt)("p",null,"  The ",(0,l.kt)("inlineCode",{parentName:"p"},"plan")," json root is not present in the request body.")),(0,l.kt)(i.Z,{value:"401",label:"HTTP 401",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "status": 401,\n  "error": "Unauthorized"\n}\n')),(0,l.kt)("p",null,"  Access to the API endpoint is unhautorized."),(0,l.kt)("p",null,"  ",(0,l.kt)("strong",{parentName:"p"},"Possible reasons are:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"Authorization")," header is missing"),(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"Authorization")," header does not contain the API key"),(0,l.kt)("li",{parentName:"ul"},"The Api key is invalid or expired"))),(0,l.kt)(i.Z,{value:"404",label:"HTTP 404",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "status": 404,\n  "error": "Not Found"\n}\n')),(0,l.kt)("p",null,"  The ",(0,l.kt)("inlineCode",{parentName:"p"},"plan")," was not found by the code or the billable metric was not found by the id.")),(0,l.kt)(i.Z,{value:"422",label:"HTTP 422",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "status": 422,\n  "error": "Unprocessable entity",\n  "message": "message"\n}\n')),(0,l.kt)("p",null,"  ",(0,l.kt)("strong",{parentName:"p"},"Possible error messages:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Validation error on the record"))))))}k.isMDXComponent=!0}}]);