"use strict";(self.webpackChunklago_doc=self.webpackChunklago_doc||[]).push([[6888],{3905:(t,e,n)=>{n.d(e,{Zo:()=>d,kt:()=>g});var a=n(67294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function p(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var o=a.createContext({}),u=function(t){var e=a.useContext(o),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},d=function(t){var e=u(t.components);return a.createElement(o.Provider,{value:e},t.children)},m="mdxType",s={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},k=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,o=t.parentName,d=p(t,["components","mdxType","originalType","parentName"]),m=u(n),k=r,g=m["".concat(o,".").concat(k)]||m[k]||s[k]||l;return n?a.createElement(g,i(i({ref:e},d),{},{components:n})):a.createElement(g,i({ref:e},d))}));function g(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,i=new Array(l);i[0]=k;var p={};for(var o in e)hasOwnProperty.call(e,o)&&(p[o]=e[o]);p.originalType=t,p[m]="string"==typeof t?t:r,i[1]=p;for(var u=2;u<l;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},85162:(t,e,n)=>{n.d(e,{Z:()=>i});var a=n(67294),r=n(86010);const l={tabItem:"tabItem_Ymn6"};function i(t){let{children:e,hidden:n,className:i}=t;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l.tabItem,i),hidden:n},e)}},74866:(t,e,n)=>{n.d(e,{Z:()=>f});var a=n(87462),r=n(67294),l=n(86010),i=n(12466),p=n(16550),o=n(91980),u=n(67392),d=n(50012);function m(t){return function(t){return r.Children.map(t,(t=>{if(!t||(0,r.isValidElement)(t)&&function(t){const{props:e}=t;return!!e&&"object"==typeof e&&"value"in e}(t))return t;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof t.type?t.type:t.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(t).map((t=>{let{props:{value:e,label:n,attributes:a,default:r}}=t;return{value:e,label:n,attributes:a,default:r}}))}function s(t){const{values:e,children:n}=t;return(0,r.useMemo)((()=>{const t=e??m(n);return function(t){const e=(0,u.l)(t,((t,e)=>t.value===e.value));if(e.length>0)throw new Error(`Docusaurus error: Duplicate values "${e.map((t=>t.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(t),t}),[e,n])}function k(t){let{value:e,tabValues:n}=t;return n.some((t=>t.value===e))}function g(t){let{queryString:e=!1,groupId:n}=t;const a=(0,p.k6)(),l=function(t){let{queryString:e=!1,groupId:n}=t;if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,o._X)(l),(0,r.useCallback)((t=>{if(!l)return;const e=new URLSearchParams(a.location.search);e.set(l,t),a.replace({...a.location,search:e.toString()})}),[l,a])]}function c(t){const{defaultValue:e,queryString:n=!1,groupId:a}=t,l=s(t),[i,p]=(0,r.useState)((()=>function(t){let{defaultValue:e,tabValues:n}=t;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!k({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map((t=>t.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const a=n.find((t=>t.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:e,tabValues:l}))),[o,u]=g({queryString:n,groupId:a}),[m,c]=function(t){let{groupId:e}=t;const n=function(t){return t?`docusaurus.tab.${t}`:null}(e),[a,l]=(0,d.Nk)(n);return[a,(0,r.useCallback)((t=>{n&&l.set(t)}),[n,l])]}({groupId:a}),_=(()=>{const t=o??m;return k({value:t,tabValues:l})?t:null})();(0,r.useLayoutEffect)((()=>{_&&p(_)}),[_]);return{selectedValue:i,selectValue:(0,r.useCallback)((t=>{if(!k({value:t,tabValues:l}))throw new Error(`Can't select invalid tab value=${t}`);p(t),u(t),c(t)}),[u,c,l]),tabValues:l}}var _=n(72389);const N={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(t){let{className:e,block:n,selectedValue:p,selectValue:o,tabValues:u}=t;const d=[],{blockElementScrollPositionUntilNextRender:m}=(0,i.o5)(),s=t=>{const e=t.currentTarget,n=d.indexOf(e),a=u[n].value;a!==p&&(m(e),o(a))},k=t=>{let e=null;switch(t.key){case"Enter":s(t);break;case"ArrowRight":{const n=d.indexOf(t.currentTarget)+1;e=d[n]??d[0];break}case"ArrowLeft":{const n=d.indexOf(t.currentTarget)-1;e=d[n]??d[d.length-1];break}}e?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},e)},u.map((t=>{let{value:e,label:n,attributes:i}=t;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:p===e?0:-1,"aria-selected":p===e,key:e,ref:t=>d.push(t),onKeyDown:k,onClick:s},i,{className:(0,l.Z)("tabs__item",N.tabItem,i?.className,{"tabs__item--active":p===e})}),n??e)})))}function h(t){let{lazy:e,children:n,selectedValue:a}=t;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const t=l.find((t=>t.props.value===a));return t?(0,r.cloneElement)(t,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((t,e)=>(0,r.cloneElement)(t,{key:e,hidden:t.props.value!==a}))))}function y(t){const e=c(t);return r.createElement("div",{className:(0,l.Z)("tabs-container",N.tabList)},r.createElement(b,(0,a.Z)({},t,e)),r.createElement(h,(0,a.Z)({},t,e)))}function f(t){const e=(0,_.Z)();return r.createElement(y,(0,a.Z)({key:String(e)},t))}},18059:(t,e,n)=>{n.r(e),n.d(e,{Comment:()=>g,Optional:()=>k,PostEndpoint:()=>c,Required:()=>s,assets:()=>d,contentTitle:()=>o,default:()=>b,frontMatter:()=>p,metadata:()=>u,toc:()=>m});var a=n(87462),r=(n(67294),n(3905)),l=n(74866),i=n(85162);const p={sidebar_position:2},o="Update plan",u={unversionedId:"api/plans/update-plan",id:"api/plans/update-plan",title:"Update plan",description:"Route",source:"@site/docs/api/03_plans/update-plan.mdx",sourceDirName:"api/03_plans",slug:"/api/plans/update-plan",permalink:"/docs/api/plans/update-plan",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"api",previous:{title:"Create plan",permalink:"/docs/api/plans/create-plan"},next:{title:"Destroy plan",permalink:"/docs/api/plans/destroy-plan"}},d={},m=[{value:"Route",id:"route",level:2},{value:"Usage",id:"usage",level:2},{value:"Arguments",id:"arguments",level:2},{value:"Plan attributes",id:"plan-attributes",level:3},{value:"Charge attributes",id:"charge-attributes",level:3},{value:"Group Properties",id:"group-properties",level:3},{value:"Standard charge model",id:"standard-charge-model",level:4},{value:"Graduated charge model",id:"graduated-charge-model",level:4},{value:"Package charge model",id:"package-charge-model",level:4},{value:"Percentage charge model",id:"percentage-charge-model",level:4},{value:"Volume charge model",id:"volume-charge-model",level:4},{value:"Responses",id:"responses",level:2}],s=t=>{let{children:e,color:n}=t;return(0,r.kt)("span",{style:{color:"#DC3309",fontSize:"13px"}},e)},k=t=>{let{children:e,color:n}=t;return(0,r.kt)("span",{style:{color:"#8C95A6",fontSize:"13px"}},e)},g=t=>{let{children:e,color:n}=t;return(0,r.kt)("span",{style:{fontSize:"12px"}},e)},c=t=>{let{children:e,color:n}=t;return(0,r.kt)("span",{style:{color:"#008559",fontSize:"12px"}},e)},_={toc:m,Required:s,Optional:k,Comment:g,PostEndpoint:c},N="wrapper";function b(t){let{components:e,...n}=t;return(0,r.kt)(N,(0,a.Z)({},_,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"update-plan"},"Update plan"),(0,r.kt)("h2",{id:"route"},"Route"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-curl",metastring:'title="PUT"',title:'"PUT"'},"/api/v1/plans/:code\n")),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)(l.Z,{groupId:"prog-language",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"curl",label:"Curl",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'LAGO_URL="https://api.getlago.com"\nAPI_KEY="__YOUR_API_KEY__"\n\ncurl --location --request PUT "$LAGO_URL/api/v1/plans/__plan_code__" \\\n--header "Authorization: Bearer $API_KEY" \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n  "plan": {\n    "name": "Basic",\n    "code": "basic",\n    "interval": "yearly",\n    "description": "This is a basic plan description",\n    "amount_cents": 90000,\n    "amount_currency": "USD",\n    "trial_period": 3.0,\n    "pay_in_advance": true,\n    "bill_charges_monthly": true,\n    "charges": [\n      {\n        "id": "__CHARGE_ID__",\n        "billable_metric_id": "__BILLABLE_METRIC_ID__",\n        "charge_model": "standard",\n        "instant": false,\n        "group_properties": [\n          {\n            group_id: "__GROUP_ID__",\n            values: {\n              "amount": "0.10"\n            }\n          }\n        ]\n      },\n      {\n        "id": "__CHARGE_ID__",\n        "billable_metric_id": "__BILLABLE_METRIC_ID__",\n        "charge_model": "graduated",\n        "instant": false,\n        "properties": {\n          "graduated_ranges": [\n            {\n              "to_value": 10,\n              "from_value": 0,\n              "flat_amount": "0",\n              "per_unit_amount": "0.00010"\n            },\n            {\n              "to_value": null,\n              "from_value": 11,\n              "flat_amount": "0",\n              "per_unit_amount": "0.0005"\n            }\n          ]\n        }\n      },\n      {\n        "id": "__CHARGE_ID__",\n        "billable_metric_id": "__BILLABLE_METRIC_ID__",\n        "charge_model": "package",\n        "instant": false,\n        "properties": {\n          "amount": "100",\n          "free_units": 10000,\n          "package_size": 1000\n        }\n      },\n      {\n        "id": "__CHARGE_ID__",\n        "billable_metric_id": "__BILLABLE_METRIC_ID__",\n        "charge_model": "percentage",\n        "instant": false,\n        "properties": {\n          "rate": "0.5",\n          "fixed_amount": "1",\n          "free_units_per_events": 3,\n          "free_units_per_total_aggregation": null\n        }\n      },\n      {\n        "id": "__CHARGE_ID__",\n        "billable_metric_id": "__BILLABLE_METRIC_ID__",\n        "charge_model": "volume",\n        "instant": false,\n        "properties": {\n          "volume_ranges": [\n            {\n              "to_value": 10,\n              "from_value": 0,\n              "flat_amount": "0",\n              "per_unit_amount": "0.00010"\n            },\n            {\n              "to_value": null,\n              "from_value": 11,\n              "flat_amount": "0",\n              "per_unit_amount": "0.0005"\n            }\n          ]\n        }\n      }\n    ]\n  }\n}\'\n'))),(0,r.kt)(i.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from lago_python_client.client import Client\nfrom lago_python_client.exceptions import LagoApiError\nfrom lago_python_client.models import Plan, Charges, Charge\n\nclient = Client(api_key='__YOUR_API_KEY__')\n\nstandard_charge = Charge(\n  id='id',\n  billable_metric_id='id',\n  charge_model='standard',\n  group_properties=[\n    {\n      group_id='group_id',\n      values={\n        'amount': '0.22'\n      }\n    }\n  ]\n)\n\ngraduated_charge = Charge(\n  id='id',\n  billable_metric_id='id,\n  charge_model='graduated',\n  properties=[\n    {\n      'to_value': 10,\n      'from_value': 0,\n      'flat_amount': '0',\n      'per_unit_amount': '0.00010'\n    },\n    {\n      'to_value': None,\n      'from_value': 11,\n      'flat_amount': \"0\",\n      'per_unit_amount': '0.0005'\n    }\n  ]\n)\n\npackage_charge = Charge(\n  id='id',\n  billable_metric_id='id,\n  charge_model='package',\n  properties={\n    'amount': '100',\n    'free_units': 10000,\n    'package_size': 1000\n  }\n)\n\npercentage_charge = Charge(\n  id='id',\n  billable_metric_id='id,\n  charge_model='percentage',\n  properties={\n    'rate': '0.5',\n    'fixed_amount': '1',\n    'free_units_per_events': 3,\n    'free_units_per_total_aggregation': None\n  }\n)\n\nvolume_charge = Charge(\n  id='id',\n  billable_metric_id='id,\n  charge_model='volume',\n  properties={\n    'volume_ranges': [\n      {\n        'to_value': 10,\n        'from_value': 0,\n        'flat_amount': '0',\n        'per_unit_amount': '0.00010'\n      },\n      {\n        'to_value': None,\n        'from_value': 11,\n        'flat_amount': '0',\n        'per_unit_amount': '0.0005'\n      }\n    ]\n  }\n)\n\ncharges = Charges(__root__=[\n  standard_charge,\n  graduated_charge,\n  package_charge,\n  percentage_charge,\n  volume_charge\n])\n\nplan = Plan(\n  name='name',\n  code='code_first',\n  amount_cents=1000,\n  amount_currency='EUR',\n  description='desc',\n  interval='weekly',\n  pay_in_advance=True,\n  charges=charges\n)\n\ntry:\n    client.plans.update(plan, \"__identifier__\")\nexcept LagoApiError as e:\n    repair_broken_state(e)  # do something on error or raise your own exception\n"))),(0,r.kt)(i.Z,{value:"ruby",label:"Ruby",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},"require 'lago-ruby-client'\n\nclient = Lago::Api::Client.new({api_key: '__YOUR_API_KEY__'})\n\nplan = {\n  name: 'plan name',\n  code: 'code',\n  interval: 'monthly',\n  description: 'description',\n  amount_cents: 100,\n  amount_currency: 'EUR',\n  pay_in_advance: false,\n  charges: charges: [\n    {\n      id: 'id',\n      billable_metric_id: 'id',\n      charge_model: 'standard',\n      group_properties: [\n        {\n          group_id: 'group_id',\n          values: {\n            amount: '0.10'\n          }\n        }\n      ]\n    },\n    {\n      id: 'id',\n      billable_metric_id: 'id',\n      charge_model: 'graduated',\n      properties: [\n        {\n          to_value: 10,\n          from_value: 0,\n          flat_amount: '0',\n          per_unit_amount: '0.00010'\n        },\n        {\n          to_value: nil,\n          from_value: 11,\n          flat_amount: '0',\n          per_unit_amount: '0.0005'\n        }\n      ]\n    },\n    {\n      id: 'id',\n      billable_metric_id: 'id',\n      charge_model: 'package',\n      properties: {\n        amount: '100',\n        free_units: 10000,\n        package_size: 1000\n      }\n    },\n    {\n      id: 'id',\n      billable_metric_id: 'id',\n      charge_model: 'percentage',\n      properties: {\n        rate: '0.5',\n        fixed_amount: '1',\n        free_units_per_events: 3,\n        free_units_per_total_aggregation: nil\n      }\n    },\n    {\n      id: 'id',\n      billable_metric_id: 'id',\n      charge_model: 'volume',\n      properties: {\n        volume_ranges: [\n          {\n            to_value: 10,\n            from_value: 0,\n            flat_amount: '0',\n            per_unit_amount: '0.00010'\n          },\n          {\n            to_value: nil,\n            from_value: 11,\n            flat_amount: '0',\n            per_unit_amount: '0.0005'\n          }\n        ]\n      }\n    }\n  ]\n}\n\nclient.plans.update(plan, \"__identifier__\")\n"))),(0,r.kt)(i.Z,{value:"javascript",label:"Javascript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'await client.plans.updatePlan("code", { plan: { amount_cents: 2000 } });\n'))),(0,r.kt)(i.Z,{value:"go",label:"Go",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'  import "fmt"\n  import "github.com/getlago/lago-go-client"\n\n  func main() {\n    lagoClient := lago.New().\n      SetApiKey("__YOUR_API_KEY__")\n\n    planInput := &lago.PlanInput{\n      Name:           "Plan Go",\n      Code:           "plan_go",\n      Interval:       lago.PlanMonthly,\n      PayInAdvance:   true,\n      AmountCents:    1500,\n      AmountCurrency: lago.EUR,\n    }\n\n    planResult, err := lagoClient.Plan().Update(planInput)\n    if err != nil {\n      // Error is *lago.Error\n      panic(err)\n    }\n\n    // plan is *lago.Plan\n    fmt.Println(plan)\n  }\n'))),(0,r.kt)(i.Z,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'using System.Collections.Generic;\nusing System.Diagnostics;\nusing Org.OpenAPITools.Api;\nusing Org.OpenAPITools.Client;\nusing Org.OpenAPITools.Model;\n\nnamespace Example\n{\n  public class UpdatePlanExample\n  {\n      public static void Main()\n      {\n          Configuration.Default.BasePath = "https://api.getlago.com/api/v1";\n          // Configure HTTP bearer authorization: bearerAuth\n          Configuration.Default.AccessToken = "YOUR_ACCESS_TOKEN";\n\n          var apiInstance = new PlansApi(Configuration.Default);\n          var code = "example_code";  // string | Code of the existing plan\n          var planInput = new PlanInput(); // PlanInput | Update an existing plan\n\n          try\n          {\n              // Update an existing plan\n              Plan result = apiInstance.UpdatePlan(code, planInput);\n              Debug.WriteLine(result);\n          }\n          catch (ApiException e)\n          {\n              Debug.Print("Exception when calling PlansApi.UpdatePlan: " + e.Message );\n              Debug.Print("Status Code: "+ e.ErrorCode);\n              Debug.Print(e.StackTrace);\n          }\n      }\n  }\n}\n'))),(0,r.kt)(i.Z,{value:"php",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n\n// Configure Bearer authorization: bearerAuth\n$config = OpenAPI\\Client\\Configuration::getDefaultConfiguration()->setAccessToken('YOUR_ACCESS_TOKEN');\n\n\n$apiInstance = new OpenAPI\\Client\\Api\\PlansApi(\n  // If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n  // This is optional, `GuzzleHttp\\Client` will be used as default.\n  new GuzzleHttp\\Client(),\n  $config\n);\n$code = \"example_code\"; // string | Code of the existing plan\n$plan_input = new \\OpenAPI\\Client\\Model\\PlanInput(); // \\OpenAPI\\Client\\Model\\PlanInput | Update an existing plan\n\ntry {\n  $result = $apiInstance->updatePlan($code, $plan_input);\n  print_r($result);\n} catch (Exception $e) {\n  echo 'Exception when calling PlansApi->updatePlan: ', $e->getMessage(), PHP_EOL;\n}\n")))),(0,r.kt)("h2",{id:"arguments"},"Arguments"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "plan": {\n    "name": "Basic",\n    "code": "basic",\n    "interval": "yearly",\n    "description": "This is a basic plan description",\n    "amount_cents": 90000,\n    "amount_currency": "USD",\n    "trial_period": 3.0,\n    "pay_in_advance": true,\n    "bill_charges_monthly": true,\n    "charges": [\n      {\n        "id": "__CHARGE_ID__",\n        "billable_metric_id": "__BILLABLE_METRIC_ID__",\n        "charge_model": "standard",\n        "group_properties": [\n          {\n            "group_id": "__GROUP_ID__",\n            "values": {\n              "amount": "0.10"\n            }\n          }\n        ]\n      },\n      {\n        "id": "__CHARGE_ID__",\n        "billable_metric_id": "__BILLABLE_METRIC_ID__",\n        "charge_model": "graduated",\n        "properties": {\n          "graduated_ranges": [\n            {\n              "to_value": 10,\n              "from_value": 0,\n              "flat_amount": "0",\n              "per_unit_amount": "0.00010"\n            },\n            {\n              "to_value": null,\n              "from_value": 11,\n              "flat_amount": "0",\n              "per_unit_amount": "0.0005"\n            }\n          ]\n        }\n      },\n      {\n        "id": "__CHARGE_ID__",\n        "billable_metric_id": "__BILLABLE_METRIC_ID__",\n        "charge_model": "package",\n        "properties": {\n          "amount": "100",\n          "free_units": 10000,\n          "package_size": 1000\n        }\n      },\n      {\n        "id": "__CHARGE_ID__",\n        "billable_metric_id": "__BILLABLE_METRIC_ID__",\n        "charge_model": "percentage",\n        "properties": {\n          "rate": "0.5",\n          "fixed_amount": "1",\n          "free_units_per_events": 3,\n          "free_units_per_total_aggregation": null\n        }\n      },\n      {\n        "id": "__CHARGE_ID__",\n        "billable_metric_id": "__BILLABLE_METRIC_ID__",\n        "charge_model": "volume",\n        "properties": {\n          "volume_ranges": [\n            {\n              "to_value": 10,\n              "from_value": 0,\n              "flat_amount": "0",\n              "per_unit_amount": "0.00010"\n            },\n            {\n              "to_value": null,\n              "from_value": 11,\n              "flat_amount": "0",\n              "per_unit_amount": "0.0005"\n            }\n          ]\n        }\n      }\n    ]\n  }\n}\n')),(0,r.kt)("h3",{id:"plan-attributes"},"Plan attributes"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Attributes"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"String ","\xa0"," ","\xa0"," ","\xa0",(0,r.kt)(k,{mdxType:"Optional"},(0,r.kt)("strong",{parentName:"td"},"Optional"))),(0,r.kt)("td",{parentName:"tr",align:null},"Plan name")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"code"),(0,r.kt)("td",{parentName:"tr",align:null},"String ","\xa0"," ","\xa0"," ","\xa0",(0,r.kt)(k,{mdxType:"Optional"},(0,r.kt)("strong",{parentName:"td"},"Optional"))),(0,r.kt)("td",{parentName:"tr",align:null},"Code identifying the Plan",(0,r.kt)("br",null),"Cannot be updated if the plan is linked to a subscription")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"interval"),(0,r.kt)("td",{parentName:"tr",align:null},"String ","\xa0"," ","\xa0"," ","\xa0",(0,r.kt)(k,{mdxType:"Optional"},(0,r.kt)("strong",{parentName:"td"},"Optional"))),(0,r.kt)("td",{parentName:"tr",align:null},"Interval used for subscription billing.",(0,r.kt)("br",null),"It can be ",(0,r.kt)("inlineCode",{parentName:"td"},"yearly"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"monthly")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"weekly"),(0,r.kt)("br",null),"Cannot be updated if the plan is linked to a subscription")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"description"),(0,r.kt)("td",{parentName:"tr",align:null},"String ","\xa0"," ","\xa0"," ","\xa0",(0,r.kt)(k,{mdxType:"Optional"},(0,r.kt)("strong",{parentName:"td"},"Optional"))),(0,r.kt)("td",{parentName:"tr",align:null},"Description of the plan")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"amount_cents"),(0,r.kt)("td",{parentName:"tr",align:null},"Integer ","\xa0"," ","\xa0"," ","\xa0",(0,r.kt)(k,{mdxType:"Optional"},(0,r.kt)("strong",{parentName:"td"},"Optional"))),(0,r.kt)("td",{parentName:"tr",align:null},"Amount of the plan (excluding tax)",(0,r.kt)("br",null),"Cannot be updated if the plan is linked to a subscription")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"amount_currency"),(0,r.kt)("td",{parentName:"tr",align:null},"String ","\xa0"," ","\xa0"," ","\xa0",(0,r.kt)(k,{mdxType:"Optional"},(0,r.kt)("strong",{parentName:"td"},"Optional"))),(0,r.kt)("td",{parentName:"tr",align:null},"Currency of the amount",(0,r.kt)("br",null),"Cannot be updated if the plan is linked to a subscription")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"trial_period"),(0,r.kt)("td",{parentName:"tr",align:null},"Float ","\xa0"," ","\xa0"," ","\xa0",(0,r.kt)(k,{mdxType:"Optional"},(0,r.kt)("strong",{parentName:"td"},"Optional"))),(0,r.kt)("td",{parentName:"tr",align:null},"Number of free days",(0,r.kt)("br",null),"Cannot be updated if the plan is linked to a subscription")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"pay_in_advance"),(0,r.kt)("td",{parentName:"tr",align:null},"Boolean ","\xa0"," ","\xa0"," ","\xa0",(0,r.kt)(k,{mdxType:"Optional"},(0,r.kt)("strong",{parentName:"td"},"Optional"))),(0,r.kt)("td",{parentName:"tr",align:null},"Field specifying if payment in advance or in arrear will be used",(0,r.kt)("br",null),"Cannot be updated if the plan is linked to a subscription")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"bill_charges_monthly"),(0,r.kt)("td",{parentName:"tr",align:null},"Boolean ","\xa0"," ","\xa0"," ","\xa0",(0,r.kt)(k,{mdxType:"Optional"},(0,r.kt)("strong",{parentName:"td"},"Optional"))),(0,r.kt)("td",{parentName:"tr",align:null},"Monthly billing will be applied on yearly plan if this field is set to ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),(0,r.kt)("br",null),"Cannot be updated if the plan is linked to a subscription")))),(0,r.kt)("h3",{id:"charge-attributes"},"Charge attributes"),(0,r.kt)("p",null,"Charges cannot be updated if the plan is linked to a subscription."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Attributes"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},"String ","\xa0"," ","\xa0"," ","\xa0",(0,r.kt)(k,{mdxType:"Optional"},(0,r.kt)("strong",{parentName:"td"},"Optional"))),(0,r.kt)("td",{parentName:"tr",align:null},"Charge unique id in Lago application")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"billable_metric_id"),(0,r.kt)("td",{parentName:"tr",align:null},"String ","\xa0"," ","\xa0"," ","\xa0",(0,r.kt)(k,{mdxType:"Optional"},(0,r.kt)("strong",{parentName:"td"},"Optional"))),(0,r.kt)("td",{parentName:"tr",align:null},"Billable metric id in lago application")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"charge_model"),(0,r.kt)("td",{parentName:"tr",align:null},"String ","\xa0"," ","\xa0"," ","\xa0",(0,r.kt)(k,{mdxType:"Optional"},(0,r.kt)("strong",{parentName:"td"},"Optional"))),(0,r.kt)("td",{parentName:"tr",align:null},"Charge model used in event calculations.",(0,r.kt)("br",null),"It can be ",(0,r.kt)("inlineCode",{parentName:"td"},"standard"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"graduated"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"package"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"percentage")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"volume"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"instant"),(0,r.kt)("td",{parentName:"tr",align:null},"Boolean ","\xa0"," ","\xa0"," ","\xa0",(0,r.kt)(k,{mdxType:"Optional"},(0,r.kt)("strong",{parentName:"td"},"Optional"))),(0,r.kt)("td",{parentName:"tr",align:null},"Field specifying if charge is instant or not.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"properties"),(0,r.kt)("td",{parentName:"tr",align:null},"JSON ","\xa0"," ","\xa0"," ","\xa0",(0,r.kt)(k,{mdxType:"Optional"},(0,r.kt)("strong",{parentName:"td"},"Optional"))),(0,r.kt)("td",{parentName:"tr",align:null},"Extra data to use for the event calculations.",(0,r.kt)("br",null))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"group_properties"),(0,r.kt)("td",{parentName:"tr",align:null},"Array ","\xa0"," ","\xa0"," ","\xa0",(0,r.kt)(k,{mdxType:"Optional"},(0,r.kt)("strong",{parentName:"td"},"Optional"))),(0,r.kt)("td",{parentName:"tr",align:null},"Extra data scoped by groups to use for the event calculations.",(0,r.kt)("br",null))))),(0,r.kt)("h3",{id:"group-properties"},"Group Properties"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Attributes"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"group_id"),(0,r.kt)("td",{parentName:"tr",align:null},"String ","\xa0"," ","\xa0"," ","\xa0",(0,r.kt)(s,{mdxType:"Required"},(0,r.kt)("strong",{parentName:"td"},"Required"))),(0,r.kt)("td",{parentName:"tr",align:null},"Group id in lago application")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"values"),(0,r.kt)("td",{parentName:"tr",align:null},"JSON ","\xa0"," ","\xa0"," ","\xa0",(0,r.kt)(s,{mdxType:"Required"},(0,r.kt)("strong",{parentName:"td"},"Required"))),(0,r.kt)("td",{parentName:"tr",align:null},"Extra data to use for the event calculations.",(0,r.kt)("br",null))))),(0,r.kt)("h4",{id:"standard-charge-model"},"Standard charge model"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Attributes"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"amount"),(0,r.kt)("td",{parentName:"tr",align:null},"String ",(0,r.kt)("br",null),(0,r.kt)(s,{mdxType:"Required"},(0,r.kt)("strong",{parentName:"td"},"Required")),(0,r.kt)("br",null),(0,r.kt)(g,{mdxType:"Comment"},(0,r.kt)("em",{parentName:"td"},"Decimal"))),(0,r.kt)("td",{parentName:"tr",align:null},"Unit price (excluding tax)")))),(0,r.kt)("h4",{id:"graduated-charge-model"},"Graduated charge model"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Model:")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Attributes"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"graduated_ranges"),(0,r.kt)("td",{parentName:"tr",align:null},"Array",(0,r.kt)("br",null),(0,r.kt)(s,{mdxType:"Required"},(0,r.kt)("strong",{parentName:"td"},"Required"))),(0,r.kt)("td",{parentName:"tr",align:null},"Graduated ranges, sorted from bottom to top boundaries")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Graduated Ranges:")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Attributes"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"from_value"),(0,r.kt)("td",{parentName:"tr",align:null},"Integer ",(0,r.kt)("br",null),(0,r.kt)(s,{mdxType:"Required"},(0,r.kt)("strong",{parentName:"td"},"Required"))),(0,r.kt)("td",{parentName:"tr",align:null},"Lower value of the range.",(0,r.kt)("br",null),"- Must be ",(0,r.kt)("inlineCode",{parentName:"td"},"0")," or previous range ",(0,r.kt)("inlineCode",{parentName:"td"},"to_value + 1"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"to_value"),(0,r.kt)("td",{parentName:"tr",align:null},"Integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Top value of the range.",(0,r.kt)("br",null),"- Must be higher than the range from_value.",(0,r.kt)("br",null),"- Must be null on last range")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"per_unit_amount"),(0,r.kt)("td",{parentName:"tr",align:null},"String ",(0,r.kt)("br",null),(0,r.kt)(s,{mdxType:"Required"},(0,r.kt)("strong",{parentName:"td"},"Required"))," ",(0,r.kt)("br",null),(0,r.kt)(g,{mdxType:"Comment"},(0,r.kt)("em",{parentName:"td"},"Decimal value"))),(0,r.kt)("td",{parentName:"tr",align:null},"Amount (excluding tax) to apply to each aggregated unit between the boundaries")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"flat_amount"),(0,r.kt)("td",{parentName:"tr",align:null},"String ",(0,r.kt)("br",null),(0,r.kt)(s,{mdxType:"Required"},(0,r.kt)("strong",{parentName:"td"},"Required"))," ",(0,r.kt)("br",null),(0,r.kt)(g,{mdxType:"Comment"},(0,r.kt)("em",{parentName:"td"},"Decimal value"))),(0,r.kt)("td",{parentName:"tr",align:null},"Flat amount (excluding tax) to add to the result if the range is reached")))),(0,r.kt)("h4",{id:"package-charge-model"},"Package charge model"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Attributes"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"amount"),(0,r.kt)("td",{parentName:"tr",align:null},"String ",(0,r.kt)("br",null),(0,r.kt)(s,{mdxType:"Required"},(0,r.kt)("strong",{parentName:"td"},"Required")),(0,r.kt)("br",null),(0,r.kt)(g,{mdxType:"Comment"},(0,r.kt)("em",{parentName:"td"},"Decimal value"))),(0,r.kt)("td",{parentName:"tr",align:null},"Price of one package (excluding tax)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"package_size"),(0,r.kt)("td",{parentName:"tr",align:null},"Integer ",(0,r.kt)("br",null),(0,r.kt)(s,{mdxType:"Required"},(0,r.kt)("strong",{parentName:"td"},"Required"))),(0,r.kt)("td",{parentName:"tr",align:null},"Number of aggregated units per package")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"free_units"),(0,r.kt)("td",{parentName:"tr",align:null},"Integer ",(0,r.kt)("br",null),(0,r.kt)(s,{mdxType:"Required"},(0,r.kt)("strong",{parentName:"td"},"Required"))),(0,r.kt)("td",{parentName:"tr",align:null},"Number of aggregated units to exclude before applying the charge model")))),(0,r.kt)("h4",{id:"percentage-charge-model"},"Percentage charge model"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Attributes"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rate"),(0,r.kt)("td",{parentName:"tr",align:null},"String ",(0,r.kt)("br",null),(0,r.kt)(s,{mdxType:"Required"},(0,r.kt)("strong",{parentName:"td"},"Required")),(0,r.kt)("br",null),(0,r.kt)(g,{mdxType:"Comment"},(0,r.kt)("em",{parentName:"td"},"Decimal value"))),(0,r.kt)("td",{parentName:"tr",align:null},"Charge rate (excluding tax) that applies to the total amount")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"fixed_amount"),(0,r.kt)("td",{parentName:"tr",align:null},"String ",(0,r.kt)("br",null),(0,r.kt)(g,{mdxType:"Comment"},(0,r.kt)("em",{parentName:"td"},"Decimal value"))),(0,r.kt)("td",{parentName:"tr",align:null},"Fee (excluding tax) that applies to each event ingested during the billing period")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"free_units_per_events"),(0,r.kt)("td",{parentName:"tr",align:null},"Integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Number of events that are not subject to the fixed fee")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"free_units_per_total_aggregation"),(0,r.kt)("td",{parentName:"tr",align:null},"String ",(0,r.kt)("br",null),(0,r.kt)(g,{mdxType:"Comment"},(0,r.kt)("em",{parentName:"td"},"Decimal value"))),(0,r.kt)("td",{parentName:"tr",align:null},"Amount that is not subject to the charge rate")))),(0,r.kt)("h4",{id:"volume-charge-model"},"Volume charge model"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Model:")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Attributes"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"volume_ranges"),(0,r.kt)("td",{parentName:"tr",align:null},"Array",(0,r.kt)("br",null),(0,r.kt)(s,{mdxType:"Required"},(0,r.kt)("strong",{parentName:"td"},"Required"))),(0,r.kt)("td",{parentName:"tr",align:null},"Volume ranges, sorted from bottom to top boundaries")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Volume Ranges:")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Attributes"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"from_value"),(0,r.kt)("td",{parentName:"tr",align:null},"Integer ",(0,r.kt)("br",null),(0,r.kt)(s,{mdxType:"Required"},(0,r.kt)("strong",{parentName:"td"},"Required"))),(0,r.kt)("td",{parentName:"tr",align:null},"Lower value of the range.",(0,r.kt)("br",null),"- Must be ",(0,r.kt)("inlineCode",{parentName:"td"},"0")," or previous range ",(0,r.kt)("inlineCode",{parentName:"td"},"to_value + 1"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"to_value"),(0,r.kt)("td",{parentName:"tr",align:null},"Integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Top value of the range.",(0,r.kt)("br",null),"- Must be higher than the range from_value.",(0,r.kt)("br",null),"- Must be null on last range")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"per_unit_amount"),(0,r.kt)("td",{parentName:"tr",align:null},"String ",(0,r.kt)("br",null),(0,r.kt)(s,{mdxType:"Required"},(0,r.kt)("strong",{parentName:"td"},"Required"))," ",(0,r.kt)("br",null),(0,r.kt)(g,{mdxType:"Comment"},(0,r.kt)("em",{parentName:"td"},"Decimal value"))),(0,r.kt)("td",{parentName:"tr",align:null},"Amount (excluding tax) to apply to each aggregated unit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"flat_amount"),(0,r.kt)("td",{parentName:"tr",align:null},"String ",(0,r.kt)("br",null),(0,r.kt)(s,{mdxType:"Required"},(0,r.kt)("strong",{parentName:"td"},"Required"))," ",(0,r.kt)("br",null),(0,r.kt)(g,{mdxType:"Comment"},(0,r.kt)("em",{parentName:"td"},"Decimal value"))),(0,r.kt)("td",{parentName:"tr",align:null},"Flat amount (excluding tax) to add to the result if the range is reached")))),(0,r.kt)("h2",{id:"responses"},"Responses"),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"200",label:"HTTP 200",default:!0,mdxType:"TabItem"},"The plan was updated",(0,r.kt)("p",null,"  Returns a ",(0,r.kt)("a",{parentName:"p",href:"./plan-object"},"plan")," object.")),(0,r.kt)(i.Z,{value:"400",label:"HTTP 400",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "status": 400,\n  "error": "Bad Request"\n}\n')),(0,r.kt)("p",null,"  The ",(0,r.kt)("inlineCode",{parentName:"p"},"plan")," json root is not present in the request body.")),(0,r.kt)(i.Z,{value:"401",label:"HTTP 401",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "status": 401,\n  "error": "Unauthorized"\n}\n')),(0,r.kt)("p",null,"  Access to the API endpoint is unhautorized."),(0,r.kt)("p",null,"  ",(0,r.kt)("strong",{parentName:"p"},"Possible reasons are:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"Authorization")," header is missing"),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"Authorization")," header does not contain the API key"),(0,r.kt)("li",{parentName:"ul"},"The Api key is invalid or expired"))),(0,r.kt)(i.Z,{value:"404",label:"HTTP 404",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "status": 404,\n  "error": "Not Found",\n  "code": "__CODE__"\n}\n')),(0,r.kt)("p",null,"  ",(0,r.kt)("strong",{parentName:"p"},"Possible codes are:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"plan_not_found"),": The ",(0,r.kt)("inlineCode",{parentName:"li"},"plan")," was not found"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"billable_metrics_not_found"),": One or more of the billable metrics were not found."))),(0,r.kt)(i.Z,{value:"422",label:"HTTP 422",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "status": 422,\n  "error": "Unprocessable entity",\n  "code": "validation_errors",\n  "error_details": {\n    "field": ["error"]\n  }\n}\n')),(0,r.kt)("p",null,"  ",(0,r.kt)("strong",{parentName:"p"},"Possible errors:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"On plan attributes:"),(0,r.kt)("table",{parentName:"li"},(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Code"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"name")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"value_is_mandatory")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"name")," value is missing")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"code")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"value_is_mandatory")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"code")," value is missing")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"code")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"value_already_exists")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"code")," value is already used for another plan")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"amount_currency")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"value_is_invalid")),(0,r.kt)("td",{parentName:"tr",align:null},"Provided currency value is invalid"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"On charge attributes:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Standard charge model:")),(0,r.kt)("table",{parentName:"li"},(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Code"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"properties")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"invalid_amount")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"amount")," value is invalid")))),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Graduated charge model:")),(0,r.kt)("table",{parentName:"li"},(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Code"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"properties")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"missing_graduated_ranges")),(0,r.kt)("td",{parentName:"tr",align:null},"Range values are missing")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"properties")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"invalid_graduated_ranges")),(0,r.kt)("td",{parentName:"tr",align:null},"One of the range attributes is invalid")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"properties")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"invalid_amount")),(0,r.kt)("td",{parentName:"tr",align:null},"Value provided for ",(0,r.kt)("inlineCode",{parentName:"td"},"per_unit_amount")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"flat_amount")," is invalid")))),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Package charge model:")),(0,r.kt)("table",{parentName:"li"},(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Code"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"properties")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"invalid_package_size")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"package_size")," value is invalid")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"properties")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"invalid_free_units")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"free_units")," value is invalid")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"properties")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"invalid_amount")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"amount")," value is invalid")))),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Percentage charge model:")),(0,r.kt)("table",{parentName:"li"},(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Code"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"properties")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"invalid_rate")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"rate")," value is invalid")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"properties")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"invalid_fixed_amount")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"fixed_amount")," value is invalid")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"properties")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"invalid_free_units_per_events")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"free_units_per_events")," value is invalid")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"properties")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"invalid_free_units_per_total_aggregation")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"free_units_per_total_aggregation")," value is invalid")))),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Volume charge model:")),(0,r.kt)("table",{parentName:"li"},(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Code"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"properties")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"missing_volume_ranges")),(0,r.kt)("td",{parentName:"tr",align:null},"Range values are missing")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"properties")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"invalid_volume_ranges")),(0,r.kt)("td",{parentName:"tr",align:null},"One of the range attributes is invalid")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"properties")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"invalid_amount")),(0,r.kt)("td",{parentName:"tr",align:null},"Value provided for ",(0,r.kt)("inlineCode",{parentName:"td"},"per_unit_amount")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"flat_amount")," is invalid")))))))))}b.isMDXComponent=!0}}]);